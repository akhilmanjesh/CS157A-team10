/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.93
 * Generated at: 2023-11-30 11:09:45 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import java.util.Properties;
import java.io.InputStream;
import java.sql.*;

public final class projects_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/navbar.jsp", Long.valueOf(1701339963438L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.Properties");
    _jspx_imports_classes.add("java.io.InputStream");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("  \r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("    <head>\r\n");
      out.write("        <title>Projects Page</title>\r\n");
      out.write("        <link rel=\"stylesheet\" href=\"css/bootstrap.min.css\">\r\n");
      out.write("        <link rel=\"stylesheet\" href=\"style.css\">\r\n");
      out.write("        <style>\r\n");
      out.write("            .card-title {\r\n");
      out.write("                color: #007bff;\r\n");
      out.write("                text-decoration: underline;\r\n");
      out.write("                cursor: pointer;\r\n");
      out.write("                font-weight: bold;\r\n");
      out.write("            }\r\n");
      out.write("    \r\n");
      out.write("            .card-title:hover {\r\n");
      out.write("                color: #0056b3;\r\n");
      out.write("            }\r\n");
      out.write("        </style>\r\n");
      out.write("    </head>\r\n");
      out.write("    <body>\r\n");
      out.write("        ");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <title>SOT - Home</title>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"css/bootstrap.min.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"style.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <nav class=\"navbar navbar-expand-lg custom-navbar\">\r\n");
      out.write("        <a class=\"navbar-brand\" href=\"index.jsp\" style=\"margin-left:10px\">SOT</a>\r\n");
      out.write("        <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n");
      out.write("            <span class=\"navbar-toggler-icon\"></span>\r\n");
      out.write("        </button>\r\n");
      out.write("        ");
 HttpSession sso = request.getSession(false); 
      out.write("\r\n");
      out.write("        <div class=\"collapse navbar-collapse justify-content-end\" id=\"navbarNav\"style=\"margin-right:10px\">\r\n");
      out.write("            <ul class=\"navbar-nav\">\r\n");
      out.write("                <li class=\"nav-item active\">\r\n");
      out.write("                    <a class=\"nav-link\" href=\"index.jsp\">Home</a>\r\n");
      out.write("                </li>\r\n");
      out.write("                <li class=\"nav-item\">\r\n");
      out.write("                    <a class=\"nav-link\" href=\"projects.jsp\">Projects</a>\r\n");
      out.write("                </li>\r\n");
      out.write("                ");

                if (sso.getAttribute("username") != null){
                        
      out.write("           \r\n");
      out.write("                       <li class=\"nav-item\">\r\n");
      out.write("                        <a class=\"nav-link\" href=\"posts.jsp\">Posts</a>\r\n");
      out.write("                        </li>\r\n");
      out.write("                        <li class=\"nav-item\">\r\n");
      out.write("                            <a class=\"nav-link\" href=\"events.jsp\">Events</a>\r\n");
      out.write("                        </li>\r\n");
      out.write("                        ");

                    } 
                
      out.write("\r\n");
      out.write("                <li class=\"nav-item\">\r\n");
      out.write("                    <a class=\"nav-link\" href=\"organizations.jsp\">Organizations</a>\r\n");
      out.write("                </li>\r\n");
      out.write("                ");

                    if (sso.getAttribute("username") != null){
                        
      out.write("     \r\n");
      out.write("                        <li class=\"nav-item\">\r\n");
      out.write("                            <a class=\"nav-link\" href=\"friends.jsp\">Friends</a>\r\n");
      out.write("                        </li>           \r\n");
      out.write("                        <li class=\"nav-item\">\r\n");
      out.write("                            <a class=\"nav-link\" href=\"logout.jsp\">Logout</a>\r\n");
      out.write("                        </li>\r\n");
      out.write("                        ");

                    } else {
                        
      out.write("\r\n");
      out.write("                        <li class=\"nav-item\">\r\n");
      out.write("                            <a class=\"nav-link\" href=\"login.jsp\">Login</a>\r\n");
      out.write("                        </li>\r\n");
      out.write("                        <li class=\"nav-item\">\r\n");
      out.write("                            <a class=\"nav-link\" href=\"signup.jsp\">Sign Up</a>\r\n");
      out.write("                        </li>\r\n");
      out.write("                        ");

                    }
                
      out.write("\r\n");
      out.write("            </ul>\r\n");
      out.write("        </div>\r\n");
      out.write("    </nav>\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js\" integrity=\"sha384-I7E8VVD/ismYTF4hNIPjVp/Zjvgyol6VFvRkX/vR+Vc4jQkC+hVqc2pM8ODewa9r\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.min.js\" integrity=\"sha384-BBtl+eGJRgqQAUMxJ7pMwbEyER4l1g+O15P+16Ep7Q9Q+zqX6gSbd85u4mG4QzX+\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("        <hr class=\"featurette-divider\">\r\n");
      out.write("        <div class=\"container-fluid\">\r\n");
      out.write("            <div class=\"row\">\r\n");
      out.write("                <div class=\"col-6\">\r\n");
      out.write("                    <h3> Projects</h3>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"col-6\">\r\n");
      out.write("                    <form class=\"form-inline\" method=\"post\" action=\"\">\r\n");
      out.write("                        <div class=\"input-group\">\r\n");
      out.write("                            <input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" name=\"searchTerm\">\r\n");
      out.write("                            <button class=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </form>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        ");

            sso = request.getSession(false);
            if(sso.getAttribute("username") != null && sso.getAttribute("type") == "companystaff") {
                
      out.write(" <a href=\"create_project.jsp\"><button>Create Project</button></a> ");

            }
        
      out.write("\r\n");
      out.write("        \r\n");
      out.write("\r\n");
      out.write("        ");

        String db = "sot";
        Properties props = new Properties();
        InputStream input = getServletContext().getResourceAsStream("/WEB-INF/config.properties");
        props.load(input);
        input.close();
        String user = props.getProperty("db.username");
        String password = props.getProperty("db.password");
        Connection con = null;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/" + db + "?autoReconnect=true&useSSL=false", user, password);

            String searchTerm = request.getParameter("searchTerm");

            String query = "SELECT * FROM project";

            if (searchTerm != null && !searchTerm.isEmpty()) {
                query += " WHERE ProjectName LIKE '%" + searchTerm + "%'";
            }

            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery(query);

            while(rs.next()) {
                int projectId = rs.getInt(1);
                String projectName = rs.getString(2);
                String projectDescription = rs.getString(3);
                String projectOrgName = rs.getString(4);
                String projectModalID = projectName.replace(" ", "_") + "Modal" + projectId; 

                String username = (String) sso.getAttribute("username");

                boolean isInProjectOrg = false;
                String isInProjectOrgQuery = "SELECT * FROM membersofcompany WHERE username = ? AND orgname = ?";
                PreparedStatement inProjectPs = con.prepareStatement(isInProjectOrgQuery);
                inProjectPs.setString(1, username);
                inProjectPs.setString(2, projectOrgName);
                ResultSet inProjectRS = inProjectPs.executeQuery();
                isInProjectOrg = inProjectRS.next();

                boolean isCompanyLead = false;
                
                String companyLeadsQuery = "SELECT * FROM companyleads WHERE username = ? AND orgname = ?";
                PreparedStatement companyLeadsPs = con.prepareStatement(companyLeadsQuery);
                companyLeadsPs.setString(1, username);
                companyLeadsPs.setString(2, projectOrgName);
                ResultSet companyLeadsRS = companyLeadsPs.executeQuery();
                
                isCompanyLead = companyLeadsRS.next();

                companyLeadsRS.close();
                companyLeadsPs.close();
                String reviewsQuery = "SELECT Author, review FROM reviews WHERE projectid = ?";
                PreparedStatement reviewsPs = con.prepareStatement(reviewsQuery);
                reviewsPs.setInt(1, projectId);
                ResultSet reviewsRs = reviewsPs.executeQuery();
                
      out.write("\r\n");
      out.write("                <div class =\"card\">\r\n");
      out.write("                    <div class=\"card-body\">\r\n");
      out.write("                        <h5 class=\"card-title\" data-bs-toggle=\"modal\" data-bs-target=\"#");
      out.print( projectModalID );
      out.write('"');
      out.write('>');
      out.print( projectName );
      out.write("</h5>\r\n");
      out.write("                        <p class=\"card-text\">");
      out.print( projectDescription );
      out.write("</p>\r\n");
      out.write("                        ");
 if(sso.getAttribute("username") != null && sso.getAttribute("type") == "companystaff" && isInProjectOrg) { 
      out.write("\r\n");
      out.write("                            <a href=\"editProject.jsp?projectId=");
      out.print( projectId );
      out.write("\" class=\"btn btn-warning\">Edit</a>\r\n");
      out.write("                            <a href=\"createReview.jsp?projectId=");
      out.print( projectId );
      out.write("&projectName=");
      out.print( projectName );
      out.write("\" class=\"btn btn-primary\">Create Review</a>\r\n");
      out.write("                        ");
 } 
      out.write("\r\n");
      out.write("                        ");
 if (isCompanyLead) { 
      out.write(" \r\n");
      out.write("                            <a href=\"deleteProject.jsp?projectId=");
      out.print( projectId );
      out.write("\" class=\"btn btn-danger\">Delete</a>\r\n");
      out.write("                        ");
  } 
      out.write("\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("\r\n");
      out.write("                <div class=\"modal fade\" id=\"");
      out.print( projectModalID );
      out.write("\" tabindex=\"-1\" aria-labelledby=\"");
      out.print( projectModalID );
      out.write("Label\" aria-hidden=\"true\">\r\n");
      out.write("                    <div class=\"modal-dialog\">\r\n");
      out.write("                        <div class=\"modal-content\">\r\n");
      out.write("                            <div class=\"modal-header\">\r\n");
      out.write("                                <h5 class=\"modal-title\" id=\"");
      out.print( projectModalID );
      out.write("Label\">");
      out.print( projectName );
      out.write(" Details</h5>\r\n");
      out.write("                                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n");
      out.write("                            </div>\r\n");
      out.write("                            <div class=\"modal-body\">\r\n");
      out.write("                                <p>");
      out.print( projectDescription );
      out.write("</p>\r\n");
      out.write("                            </div>\r\n");
      out.write("                            <div class = \"modal-header\">\r\n");
      out.write("                                <h5 class=\"modal-title\" id=\"teamsID\"><strong>Teams: </strong></h5>\r\n");
      out.write("                            </div>\r\n");
      out.write("                            <div class=\"modal-body\">\r\n");
      out.write("                                <ul class=\"list-group\">\r\n");
      out.write("                                    ");

                                    String checkJoinedQuery = "SELECT * FROM teams NATURAL JOIN workson NATURAL JOIN studentleads WHERE projectid = ?";
                                    PreparedStatement checkJoinPs = con.prepareStatement(checkJoinedQuery);
                                    checkJoinPs.setInt(1, projectId);
                                    ResultSet joinedRs = checkJoinPs.executeQuery();
                                    while(joinedRs.next()) {
                                        String joinedOrgName = joinedRs.getString(1);
                                        String joinedTeamName = joinedRs.getString(2);
                                        String joinedTeamOrgLeader = joinedRs.getString(4);
                                        
      out.write("\r\n");
      out.write("                                        <div class=\"list-group-item d-flex justify-content-between\">\r\n");
      out.write("                                            <div>\r\n");
      out.write("                                                <strong>");
      out.print( joinedOrgName );
      out.write("</strong> - ");
      out.print( joinedTeamName );
      out.write("</li>\r\n");
      out.write("                                            </div>\r\n");
      out.write("                                        ");

                                        if(joinedTeamOrgLeader.equals(username)) { 
      out.write("\r\n");
      out.write("                                            <form method=\"post\" action=\"removeTeam.jsp\">\r\n");
      out.write("                                                <input type=\"hidden\" name=\"teamName\" value=\"");
      out.print( joinedTeamName );
      out.write("\">\r\n");
      out.write("                                                <input type=\"hidden\" name=\"orgName\" value=\"");
      out.print( joinedOrgName );
      out.write("\">\r\n");
      out.write("                                                <input type=\"hidden\" name=\"projectId\" value=\"");
      out.print( projectId );
      out.write("\">\r\n");
      out.write("                                                <button type=\"submit\" class=\"btn btn-danger\">Remove</button>\r\n");
      out.write("                                            </form>\r\n");
      out.write("                                        ");
    
                                        } 
      out.write("\r\n");
      out.write("                                        </div>\r\n");
      out.write("                                    ");
    
                                    }

                                    joinedRs.close();
                                    checkJoinPs.close();
                                    
      out.write("\r\n");
      out.write("                                </ul>\r\n");
      out.write("                            \r\n");
      out.write("                                ");

                                if(username != null && sso.getAttribute("type") == "student") {
                                    String leaderQuery = "SELECT * FROM studentleads WHERE username = ?";
                                    PreparedStatement ps = con.prepareStatement(leaderQuery);
                                    ps.setString(1, username);

                                    ResultSet leaderRS = ps.executeQuery();

                                    while(leaderRS.next()) {
                                        String leaderOrgName = leaderRS.getString("orgname");

                                        String teamsQuery = "SELECT * FROM teams WHERE orgname = ? AND (orgname, teamname) NOT IN (SELECT orgname, teamname FROM workson WHERE projectid = ?)";
                                        PreparedStatement teamsPs = con.prepareStatement(teamsQuery);
                                        teamsPs.setString(1, leaderOrgName);
                                        teamsPs.setInt(2, projectId);
                                        ResultSet teamsRS = teamsPs.executeQuery();
                                        if(teamsRS.isBeforeFirst()) {
                                        
      out.write("\r\n");
      out.write("                                            <div>\r\n");
      out.write("                                                <p><strong>Student Organization: </strong>");
      out.print( leaderOrgName );
      out.write("</p>\r\n");
      out.write("                                                <form action=\"joinProject.jsp\" method=\"post\">\r\n");
      out.write("                                                    <input type=\"hidden\" name=\"orgname\" value=\"");
      out.print( leaderOrgName );
      out.write("\">\r\n");
      out.write("                                                    <input type=\"hidden\" name=\"projectid\" value=\"");
      out.print( projectId );
      out.write("\">\r\n");
      out.write("                                                    <label for=\"teamDropdown\">Select Team:</label>\r\n");
      out.write("                                                    <select name=\"teamDropdown\" id=\"teamDropdown\">\r\n");
      out.write("                                                        ");

                                                            while(teamsRS.next()) {
                                                                String teamName = teamsRS.getString("teamName");
                                                                
      out.write("\r\n");
      out.write("                                                                <option value=\"");
      out.print( teamName );
      out.write('"');
      out.write('>');
      out.print( teamName );
      out.write("</option> \r\n");
      out.write("                                                                ");

                                                            }
                                                        
      out.write("\r\n");
      out.write("                                                        \r\n");
      out.write("                                                    </select>\r\n");
      out.write("                                                    <button type=\"submit\" class=\"btn btn-primary\">Join</button>\r\n");
      out.write("                                                </form>\r\n");
      out.write("                                            </div>\r\n");
      out.write("                                        ");

                                        }
                                        teamsRS.close();
                                        teamsPs.close();
                                    }

                                    leaderRS.close();
                                    ps.close();
                                }
                                
      out.write("\r\n");
      out.write("                                <div class=\"modal-body\">\r\n");
      out.write("                                    <h5>Reviews:</h5>\r\n");
      out.write("                                    ");
 while(reviewsRs.next()) { 
      out.write("\r\n");
      out.write("                                        <div class=\"review\">\r\n");
      out.write("                                            <strong>");
      out.print( reviewsRs.getString("Author") );
      out.write(":</strong>\r\n");
      out.write("                                            <p>");
      out.print( reviewsRs.getString("review") );
      out.write("</p>\r\n");
      out.write("                                        </div>\r\n");
      out.write("                                    ");
 } 
      out.write("\r\n");
      out.write("                                </div>\r\n");
      out.write("                                ");

                                    reviewsRs.close();
                                    reviewsPs.close();
                                
      out.write("\r\n");
      out.write("                                \r\n");
      out.write("                            </div>\r\n");
      out.write("                            <div class=\"modal-footer\">\r\n");
      out.write("                                <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                ");

            }

            rs.close();
            stmt.close();
        } catch(SQLException e) {
            out.println("SQLException caught: " + e.getMessage()); 
        } finally {
            if (con != null) {
                try {
                    con.close();
                } catch (SQLException e) {
                    out.println("SQLException caught: " + e.getMessage());
                }
            }
        }
        
      out.write("\r\n");
      out.write("        <script src=\"js/bootstrap.min.js\"></script>\r\n");
      out.write("    </body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
