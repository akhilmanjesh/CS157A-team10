/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.93
 * Generated at: 2023-11-30 08:43:14 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import java.util.Properties;
import java.io.InputStream;
import java.sql.*;
import java.sql.*;
import java.sql.*;
import java.sql.*;

public final class view_005fstudent_005forganization_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("/navbar.jsp", Long.valueOf(1701311629082L));
    _jspx_dependants.put("/create_events.jsp", Long.valueOf(1701297798042L));
    _jspx_dependants.put("/create_post.jsp", Long.valueOf(1701297798043L));
    _jspx_dependants.put("/create_team.jsp", Long.valueOf(1701297798044L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.Properties");
    _jspx_imports_classes.add("java.io.InputStream");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("  \r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("    <head>\r\n");
      out.write("        <title>Organization</title>\r\n");
      out.write("        <link rel=\"stylesheet\" href=\"css/bootstrap.min.css\">\r\n");
      out.write("        <link rel=\"stylesheet\" href=\"style.css\">\r\n");
      out.write("    </head>\r\n");
      out.write("    <body>\r\n");
      out.write("        ");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <title>SOT - Home</title>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"css/bootstrap.min.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"style.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <nav class=\"navbar navbar-expand-lg custom-navbar\">\r\n");
      out.write("        <a class=\"navbar-brand\" href=\"index.jsp\" style=\"margin-left:10px\">SOT</a>\r\n");
      out.write("        <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n");
      out.write("            <span class=\"navbar-toggler-icon\"></span>\r\n");
      out.write("        </button>\r\n");
      out.write("        ");
 HttpSession sso = request.getSession(false); 
      out.write("\r\n");
      out.write("        <div class=\"collapse navbar-collapse justify-content-end\" id=\"navbarNav\"style=\"margin-right:10px\">\r\n");
      out.write("            <ul class=\"navbar-nav\">\r\n");
      out.write("                <li class=\"nav-item active\">\r\n");
      out.write("                    <a class=\"nav-link\" href=\"index.jsp\">Home</a>\r\n");
      out.write("                </li>\r\n");
      out.write("                <li class=\"nav-item\">\r\n");
      out.write("                    <a class=\"nav-link\" href=\"projects.jsp\">Projects</a>\r\n");
      out.write("                </li>\r\n");
      out.write("                ");

                if (sso.getAttribute("username") != null){
                        
      out.write("           \r\n");
      out.write("                       <li class=\"nav-item\">\r\n");
      out.write("                        <a class=\"nav-link\" href=\"posts.jsp\">Posts</a>\r\n");
      out.write("                        </li>\r\n");
      out.write("                        <li class=\"nav-item\">\r\n");
      out.write("                            <a class=\"nav-link\" href=\"events.jsp\">Events</a>\r\n");
      out.write("                        </li>\r\n");
      out.write("                        ");

                    } 
                
      out.write("\r\n");
      out.write("                <li class=\"nav-item\">\r\n");
      out.write("                    <a class=\"nav-link\" href=\"organizations.jsp\">Organizations</a>\r\n");
      out.write("                </li>\r\n");
      out.write("                ");

                    if (sso.getAttribute("username") != null){
                        
      out.write("     \r\n");
      out.write("                        <li class=\"nav-item\">\r\n");
      out.write("                            <a class=\"nav-link\" href=\"settings.jsp\">Settings</a>\r\n");
      out.write("                        </li>           \r\n");
      out.write("                        <li class=\"nav-item\">\r\n");
      out.write("                            <a class=\"nav-link\" href=\"logout.jsp\">Logout</a>\r\n");
      out.write("                        </li>\r\n");
      out.write("                        ");

                    } else {
                        
      out.write("\r\n");
      out.write("                        <li class=\"nav-item\">\r\n");
      out.write("                            <a class=\"nav-link\" href=\"login.jsp\">Login</a>\r\n");
      out.write("                        </li>\r\n");
      out.write("                        <li class=\"nav-item\">\r\n");
      out.write("                            <a class=\"nav-link\" href=\"signup.jsp\">Sign Up</a>\r\n");
      out.write("                        </li>\r\n");
      out.write("                        ");

                    }
                
      out.write("\r\n");
      out.write("            </ul>\r\n");
      out.write("        </div>\r\n");
      out.write("    </nav>\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js\" integrity=\"sha384-I7E8VVD/ismYTF4hNIPjVp/Zjvgyol6VFvRkX/vR+Vc4jQkC+hVqc2pM8ODewa9r\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.min.js\" integrity=\"sha384-BBtl+eGJRgqQAUMxJ7pMwbEyER4l1g+O15P+16Ep7Q9Q+zqX6gSbd85u4mG4QzX+\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("    <div class = \"row justify-content-center\">\r\n");
      out.write("    ");

        sso = request.getSession(false);
        String username = (String) sso.getAttribute("username");
        String orgName = request.getParameter("orgname");
    
      out.write("\r\n");
      out.write("        \r\n");
      out.write("        ");

        String db = "sot";
        Properties props = new Properties();
        InputStream input = getServletContext().getResourceAsStream("/WEB-INF/config.properties");
        props.load(input);
        input.close();
        String user = props.getProperty("db.username");
        String password = props.getProperty("db.password");
        Connection con = null;
        
        try {   
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/" + db + "?autoReconnect=true&useSSL=false", user, password);
           

            Statement stmt = con.createStatement();

            String query = "SELECT * FROM studentorg WHERE orgname = ?";
            PreparedStatement ps = con.prepareStatement(query);
            ps.setString(1, orgName);

            ResultSet rs = ps.executeQuery();
            //Check for valid website and print the contents.
            
      out.write("\r\n");
      out.write("                <div class = \"col-8 p-3 mb-2 bg-light text-dark\">\r\n");
      out.write("                <a href = \"organizations.jsp\">         <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-arrow-return-left\" viewBox=\"0 0 16 16\">\r\n");
      out.write("                        <path fill-rule=\"evenodd\" d=\"M14.5 1.5a.5.5 0 0 1 .5.5v4.8a2.5 2.5 0 0 1-2.5 2.5H2.707l3.347 3.346a.5.5 0 0 1-.708.708l-4.2-4.2a.5.5 0 0 1 0-.708l4-4a.5.5 0 1 1 .708.708L2.707 8.3H12.5A1.5 1.5 0 0 0 14 6.8V2a.5.5 0 0 1 .5-.5\"/>\r\n");
      out.write("                    </svg></a>\r\n");
      out.write("            ");

            if (rs.next()){  
                //Get Members
                String schoolName = rs.getString(2);
                
      out.write("\r\n");
      out.write("                <h3>");
      out.print(orgName);
      out.write("</h3><br>\r\n");
      out.write("                <h5>");
      out.print(schoolName);
      out.write("</h5><br>\r\n");
      out.write("                ");

                query = "SELECT username FROM memberofstudent WHERE orgname = ?";
                ps = con.prepareStatement(query);
                ps.setString(1, orgName);
                ResultSet rsMembers = ps.executeQuery();

                //Get Teams
                query = "SELECT * FROM teams WHERE orgname = ?";
                ps = con.prepareStatement(query);
                ps.setString(1, orgName);
                ResultSet rsTeams = ps.executeQuery();

                //Get Posts
                query = "SELECT * FROM posts WHERE orgname = ?";
                ps = con.prepareStatement(query);
                ps.setString(1, orgName);
                ResultSet rsPosts = ps.executeQuery();

                //Get Events
                query = "SELECT * FROM events WHERE orgname = ?";
                ps = con.prepareStatement(query);
                ps.setString(1, orgName);
                ResultSet rsEvents = ps.executeQuery();
                
                //Check if owner
                query = "SELECT * FROM studentleads WHERE username = ? AND orgname = ?";
                ps = con.prepareStatement(query);
                ps.setString(1, username);
                ps.setString(2, orgName);
                rs = ps.executeQuery();
                boolean isOwner = false;
                if (rs.next()){
                    isOwner = true;
                }

                //Owner View
                if (isOwner){
                
      out.write("\r\n");
      out.write("                    ");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("  <head>\r\n");
      out.write("    <title></title>\r\n");
      out.write("  </head>\r\n");
      out.write("  <body>\r\n");
      out.write("    <h3>Create Team</h3>\r\n");
      out.write("    <form action=\"view_student_organization.jsp?orgname=");
      out.print(orgName);
      out.write("\" method=\"post\">\r\n");
      out.write("        <label for=\"teamName\"><b>Team Name</b></label>\r\n");
      out.write("        <input type=\"text\" placeholder=\"Enter Team Name\" name=\"teamName\" id=\"teamName\" required>\r\n");
      out.write("\r\n");
      out.write("        <button type=\"submit\" class=\"createTeamBtn\">Create Team</button>\r\n");
      out.write("    </form>\r\n");
      out.write("   ");

        sso = request.getSession(false);
        String teamName = request.getParameter("teamName");

        String dbURL = "jdbc:mysql://localhost:3306/sot?autoReconnect=true&useSSL=false";
        PreparedStatement pstmt = null;     //Insert into Team Table
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection(dbURL, user, password);
            if(teamName != null && !teamName.isEmpty()) {
                String sql = "SELECT * FROM teams WHERE teamname = ? and Orgname = ?";
                pstmt = con.prepareStatement(sql);
                pstmt.setString(1, teamName);
                pstmt.setString(2, orgName);
                rs = pstmt.executeQuery();

                if (!rs.next()){
                    sql = "INSERT INTO teams (TeamName, Orgname) VALUES (?, ?)";
                    pstmt = con.prepareStatement(sql);
                    pstmt.setString(1, teamName);
                    pstmt.setString(2, orgName);
                    int rowsAffected = pstmt.executeUpdate();
                    if(rowsAffected > 0) {
                        out.println("<p>Team created successfully</p>");
                    String redirectURL = "http://localhost:8080/SOT/view_student_organization.jsp?orgname="+orgName;
                    response.sendRedirect(redirectURL);
                    } else {
                        out.println("<p>An error occurred while creating the team</p>");
                    }
                } else {
                    throw new SQLException("Team already exists.");
                }


            }
        } catch(SQLException e) {
            out.println("<p>" + e.getMessage() + "</p>");
        } catch(ClassNotFoundException e) {
            out.println("<p>ClassNotFoundException caught: " + e.getMessage() + "</p>");
        } finally {
            if(pstmt != null) {
                try {
                    pstmt.close();
                } catch(SQLException e) {
                    out.println("<p>Error closing PreparedStatement: " + e.getMessage() + "</p>");
                }
            }
            if(con != null) {
                try {
                    con.close();
                } catch(SQLException e) {
                    out.println("<p>Error closing Connection: " + e.getMessage() + "</p>");
                }
            }
        }
    
      out.write("\r\n");
      out.write("  </body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("                    ");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("  <head>\r\n");
      out.write("    <title></title>\r\n");
      out.write("  </head>\r\n");
      out.write("  <body>\r\n");
      out.write("    <h3>Create Post</h3>\r\n");
      out.write("    <form action=\"view_student_organization.jsp?orgname=");
      out.print(orgName);
      out.write("\" method=\"post\">\r\n");
      out.write("        <label for=\"postContent\"><b>Post Content</b></label>\r\n");
      out.write("        <textarea name=\"postContent\" id=\"postContent\" required></textarea>\r\n");
      out.write("\r\n");
      out.write("        <button type=\"submit\" class=\"createPostBtn\">Create Post</button>\r\n");
      out.write("    </form>\r\n");
      out.write("   ");

        sso = request.getSession(false);
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection(dbURL, user, password);
            String postContent = request.getParameter("postContent");
            if(postContent != null && !postContent.trim().isEmpty()) {
            
                String sql = "INSERT INTO posts (body, orgname) VALUES (?, ?)";
                pstmt = con.prepareStatement(sql);
                pstmt.setString(1, postContent);
                pstmt.setString(2, orgName);
            
                int rowsAffected = pstmt.executeUpdate();
                if(rowsAffected > 0) {
                    out.println("<p>Post created successfully</p>");
                } else {
                    out.println("<p>An error occurred while creating the post</p>");
                }
                String redirectURL = "http://localhost:8080/SOT/view_student_organization.jsp?orgname="+orgName;
                response.sendRedirect(redirectURL);
            }

        } catch(SQLException e) {
            out.println("<p>SQLException caught: " + e.getMessage() + "</p>");
        } catch(ClassNotFoundException e) {
            out.println("<p>ClassNotFoundException caught: " + e.getMessage() + "</p>");
        } finally {
            if(pstmt != null) {
                try {
                    pstmt.close();
                } catch(SQLException e) {
                    out.println("<p>Error closing PreparedStatement: " + e.getMessage() + "</p>");
                }
            }
            if(con != null) {
                try {
                    con.close();
                } catch(SQLException e) {
                    out.println("<p>Error closing Connection: " + e.getMessage() + "</p>");
                }
            }
        }
    
      out.write("\r\n");
      out.write("  </body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("                    ");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("  <head>\r\n");
      out.write("    <title></title>\r\n");
      out.write("  </head>\r\n");
      out.write("  <body>\r\n");
      out.write("    <h3>Create Event</h3>\r\n");
      out.write("    <form action=\"view_student_organization.jsp?orgname=");
      out.print(orgName);
      out.write("\" method=\"post\">\r\n");
      out.write("        <label for=\"eventName\"><b>Event Name</b></label>\r\n");
      out.write("        <input type=\"text\" placeholder=\"Enter Event Name\" name=\"eventName\" id=\"eventName\" required>\r\n");
      out.write("\r\n");
      out.write("        <label for=\"eventDate\"><b>Event Date</b></label>\r\n");
      out.write("        <input type=\"date\" name=\"eventDate\" id=\"eventDate\" required>\r\n");
      out.write("\r\n");
      out.write("        <button type=\"submit\" class=\"createEventBtn\">Create Event</button>\r\n");
      out.write("    </form>\r\n");
      out.write("   ");

        sso = request.getSession(false);
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection(dbURL, user, password);
            String eventName = request.getParameter("eventName");
            String eventDate = request.getParameter("eventDate");   


            if(eventName != null && eventDate != null && !eventName.trim().isEmpty() && !eventDate.trim().isEmpty()) {
                String sql = "SELECT * FROM events WHERE eventname = ? AND eventdate = ? AND orgname = ?";
                pstmt = con.prepareStatement(sql);
                pstmt.setString(1, eventName);
                pstmt.setString(2, eventDate);
                pstmt.setString(3, orgName);
                ResultSet rsCheck = pstmt.executeQuery();
                if (!rsCheck.next()){

                    sql = "INSERT INTO events (eventname, eventdate, orgname) VALUES (?, ?, ?)";
                    pstmt = con.prepareStatement(sql);
                    pstmt.setString(1, eventName);
                    pstmt.setDate(2, java.sql.Date.valueOf(eventDate));
                    pstmt.setString(3, orgName); 
            
                    int rowsAffected = pstmt.executeUpdate();
                    if(rowsAffected > 0) {
                        out.println("<p>Event created successfully</p>");
                    } else {
                        out.println("<p>Error occurred while creating the event</p>");
                    }
                    String redirectURL = "http://localhost:8080/SOT/view_student_organization.jsp?orgname="+orgName;
                    response.sendRedirect(redirectURL);
                } else {
                    throw new SQLException("Event already exists.");
                }

            }

            
        } catch(SQLException e) {
            out.println("<p>"+e.getMessage() + "</p>");
        } catch(ClassNotFoundException e) {
            out.println("<p>ClassNotFoundException caught: " + e.getMessage() + "</p>");
        } finally {
            if(pstmt != null) {
                try {
                    pstmt.close();
                } catch(SQLException e) {
                    out.println("<p>Error closing PreparedStatement: " + e.getMessage() + "</p>");
                }
            }
            if(con != null) {
                try {
                    con.close();
                } catch(SQLException e) {
                    out.println("<p>Error closing Connection: " + e.getMessage() + "</p>");
                }
            }
        }
    
      out.write("\r\n");
      out.write("  </body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("                ");

                //Display Results
                
      out.write("\r\n");
      out.write("                <h5>Members</h5>\r\n");
      out.write("                ");

                while (rsMembers.next()){
                
      out.write("\r\n");
      out.write("                <div class =\"card\">\r\n");
      out.write("                    <div class=\"card-body\">\r\n");
      out.write("                        <h5 class=\"card-title\">");
      out.print(rsMembers.getString(1));
      out.write("</h5>\r\n");
      out.write("                        <p class=\"card-text\"></p>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                ");

                }
                
      out.write("\r\n");
      out.write("                <h5>Teams</h5>\r\n");
      out.write("                ");

                    while (rsTeams.next()){           
                        String tempTeamName = rsTeams.getString(1);
                        
      out.write("\r\n");
      out.write("                        <div class =\"card\">\r\n");
      out.write("                            <div class=\"card-body\">\r\n");
      out.write("                                <h5 class=\"card-title\"><a href = \"view_team.jsp?orgname=");
      out.print(orgName);
      out.write("&teamname=");
      out.print(tempTeamName);
      out.write('"');
      out.write('>');
      out.print(tempTeamName);
      out.write("</a></h5>\r\n");
      out.write("                                <p class=\"card-text\"><a href = \"delete_team.jsp?orgname=");
      out.print(orgName);
      out.write("&teamname=");
      out.print(tempTeamName);
      out.write("\"><button>Delete Team</button></a></p>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        ");

                    }
                
      out.write("\r\n");
      out.write("                <h5>Posts</h5>\r\n");
      out.write("                ");

                    while (rsPosts.next()){
                        String postid = rsPosts.getString(1);
                        String postBody = rsPosts.getString(2);
                        String postOrgName = rsPosts.getString(3);
                        
      out.write("\r\n");
      out.write("                            <div class =\"card\">\r\n");
      out.write("                                <div class=\"card-body\">\r\n");
      out.write("                                    <h5 class=\"card-title\">");
      out.print(postid);
      out.write(" by: [");
      out.print(postOrgName);
      out.write("]</h5>\r\n");
      out.write("                                    <p class=\"card-text\">");
      out.print(postBody);
      out.write("</p>\r\n");
      out.write("                                    <a href = \"http://localhost:8080/SOT/delete_post.jsp?postid=");
      out.print(postid);
      out.write("&orgname=");
      out.print(orgName);
      out.write("\"><button>Delete Post</button></a><br>\r\n");
      out.write("                                </div>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        ");

                    }  
                
      out.write("\r\n");
      out.write("                <h5>Events</h5>\r\n");
      out.write("                ");
     
                    while (rsEvents.next()){
                        String eventName = rsEvents.getString(1);
                        String eventDate = rsEvents.getString(2);
                        String eventOrg = rsEvents.getString(3);

                        
      out.write("\r\n");
      out.write("                            <div class =\"card\">\r\n");
      out.write("                                <div class=\"card-body\">\r\n");
      out.write("                                    <h5 class=\"card-title\">");
      out.print(eventName);
      out.write(" by: [");
      out.print(eventOrg);
      out.write("]</h5>\r\n");
      out.write("                                    <p class=\"card-text\">");
      out.print(eventDate);
      out.write("</p>\r\n");
      out.write("                                    <a href = \"http://localhost:8080/SOT/delete_event.jsp?eventname=");
      out.print(eventName);
      out.write("&eventdate=");
      out.print(eventDate);
      out.write("&orgname=");
      out.print(orgName);
      out.write("\"><button>Delete Event</button></a>\r\n");
      out.write("                                </div>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        ");

                    }      
                } 
                //User View
                else {
                    
      out.write("\r\n");
      out.write("                        <div class=\"row justify-content-center\">\r\n");
      out.write("                            <div class=\"col-md-2 mx-auto\">\r\n");
      out.write("                                <div class=\"text-center\"><h3>Members</h3>\r\n");
      out.write("                                ");

                                while (rsMembers.next()){
                                    
      out.write("\r\n");
      out.write("                                    <div class =\"card\">\r\n");
      out.write("                                        <div class=\"card-body\">\r\n");
      out.write("                                            <h5 class=\"card-title\">");
      out.print(rsMembers.getString(1));
      out.write("</h5>\r\n");
      out.write("                                            <p class=\"card-text\"></p>\r\n");
      out.write("                                        </div>\r\n");
      out.write("                                    </div>\r\n");
      out.write("                                    ");

                                }
                                
      out.write("\r\n");
      out.write("                                </div>\r\n");
      out.write("                            </div>\r\n");
      out.write("                            <div class=\"col-md-2 mx-auto\">\r\n");
      out.write("                                <div class=\"text-center\"><h3>Teams</h3>\r\n");
      out.write("                                ");

                                while (rsTeams.next()){           
                                    String tempTeamName = rsTeams.getString(1);
                                    
      out.write("\r\n");
      out.write("                                    <div class =\"card\">\r\n");
      out.write("                                        <div class=\"card-body\">\r\n");
      out.write("                                            <h5 class=\"card-title\"><a href = \"view_team.jsp?orgname=");
      out.print(orgName);
      out.write("&teamname=");
      out.print(tempTeamName);
      out.write('"');
      out.write('>');
      out.print(tempTeamName);
      out.write("</a></h5>\r\n");
      out.write("                                        </div>\r\n");
      out.write("                                    </div>\r\n");
      out.write("                                    ");

                                }
                                
      out.write("\r\n");
      out.write("                                </div>\r\n");
      out.write("                            </div>\r\n");
      out.write("                            <div class=\"col-3 mx-auto offset-sm-3 \" style=\"background-color:white\">\r\n");
      out.write("                                <div class=\"text-center\"><h3>Posts</h3>\r\n");
      out.write("                                ");

                                while (rsPosts.next()){
                                String postid = rsPosts.getString(1);
                                String postBody = rsPosts.getString(2);
                                String postOrgName = rsPosts.getString(3);
                                
      out.write("\r\n");
      out.write("                                <div class =\"card\">\r\n");
      out.write("                                    <div class=\"card-body\">\r\n");
      out.write("                                        <h5 class=\"card-title\">(");
      out.print(postid);
      out.write(")</h5>\r\n");
      out.write("                                        <p class=\"card-text\">");
      out.print(postBody);
      out.write("</p>\r\n");
      out.write("                                    </div>\r\n");
      out.write("                                </div>\r\n");
      out.write("                                ");

                                }  
                                
      out.write("\r\n");
      out.write("                                </div>\r\n");
      out.write("                            </div>\r\n");
      out.write("                            <div class=\"col-3 mx-auto\" style=\"background-color:white\">\r\n");
      out.write("                                <div class=\"text-center\">Events</div>\r\n");
      out.write("                                ");

                                while (rsEvents.next()){
                                    String eventName = rsEvents.getString(1);
                                    String eventDate = rsEvents.getString(2);
                                    String eventOrg = rsEvents.getString(3);

                                    
      out.write("\r\n");
      out.write("                                        <div class =\"card\">\r\n");
      out.write("                                            <div class=\"card-body\">\r\n");
      out.write("                                                <h5 class=\"card-title\">");
      out.print(eventName);
      out.write("</h5>\r\n");
      out.write("                                                <p class=\"card-text\">");
      out.print(eventDate);
      out.write("</p>\r\n");
      out.write("                                            </div>\r\n");
      out.write("                                        </div>\r\n");
      out.write("                                    ");

                                }  
                                
      out.write("\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    ");

                }
            ps.close();
            rs.close();
            rsTeams.close();
            rsPosts.close();
            rsEvents.close();
            rsMembers.close();

            } else {
                response.sendError(HttpServletResponse.SC_NOT_FOUND, request.getRequestURI());
            }

        } catch(SQLException e) {
            out.println(e.getMessage()); 
        } finally {
            if (con != null) {
                try {
                    con.close();
                } catch (SQLException e) {
                    out.println(e.getMessage());
                }
            }
        }

        
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <script src=\"js/bootstrap.min.js\"></script>\r\n");
      out.write("    </body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
