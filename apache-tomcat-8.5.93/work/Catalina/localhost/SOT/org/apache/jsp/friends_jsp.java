/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.93
 * Generated at: 2023-12-10 01:47:10 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import javax.servlet.http.*;
import javax.servlet.*;
import java.util.Properties;
import java.io.InputStream;
import java.sql.*;

public final class friends_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/navbar.jsp", Long.valueOf(1701350444935L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.Properties");
    _jspx_imports_classes.add("java.io.InputStream");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("  \r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <title>Friends</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    ");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <title>SOT - Home</title>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"css/bootstrap.min.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"style.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <nav class=\"navbar navbar-expand-lg custom-navbar\">\r\n");
      out.write("        <a class=\"navbar-brand\" href=\"index.jsp\" style=\"margin-left:10px\">SOT</a>\r\n");
      out.write("        <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n");
      out.write("            <span class=\"navbar-toggler-icon\"></span>\r\n");
      out.write("        </button>\r\n");
      out.write("        ");
 HttpSession sso = request.getSession(false); 
      out.write("\r\n");
      out.write("        <div class=\"collapse navbar-collapse justify-content-end\" id=\"navbarNav\"style=\"margin-right:10px\">\r\n");
      out.write("            <ul class=\"navbar-nav\">\r\n");
      out.write("                <li class=\"nav-item active\">\r\n");
      out.write("                    <a class=\"nav-link\" href=\"index.jsp\">Home</a>\r\n");
      out.write("                </li>\r\n");
      out.write("                <li class=\"nav-item\">\r\n");
      out.write("                    <a class=\"nav-link\" href=\"projects.jsp\">Projects</a>\r\n");
      out.write("                </li>\r\n");
      out.write("                ");

                if (sso.getAttribute("username") != null){
                        
      out.write("           \r\n");
      out.write("                       <li class=\"nav-item\">\r\n");
      out.write("                        <a class=\"nav-link\" href=\"posts.jsp\">Posts</a>\r\n");
      out.write("                        </li>\r\n");
      out.write("                        <li class=\"nav-item\">\r\n");
      out.write("                            <a class=\"nav-link\" href=\"events.jsp\">Events</a>\r\n");
      out.write("                        </li>\r\n");
      out.write("                        ");

                    } 
                
      out.write("\r\n");
      out.write("                <li class=\"nav-item\">\r\n");
      out.write("                    <a class=\"nav-link\" href=\"organizations.jsp\">Organizations</a>\r\n");
      out.write("                </li>\r\n");
      out.write("                ");

                    if (sso.getAttribute("username") != null){
                        
      out.write("     \r\n");
      out.write("                        <li class=\"nav-item\">\r\n");
      out.write("                            <a class=\"nav-link\" href=\"friends.jsp\">Friends</a>\r\n");
      out.write("                        </li>           \r\n");
      out.write("                        <li class=\"nav-item\">\r\n");
      out.write("                            <a class=\"nav-link\" href=\"logout.jsp\">Logout</a>\r\n");
      out.write("                        </li>\r\n");
      out.write("                        ");

                    } else {
                        
      out.write("\r\n");
      out.write("                        <li class=\"nav-item\">\r\n");
      out.write("                            <a class=\"nav-link\" href=\"login.jsp\">Login</a>\r\n");
      out.write("                        </li>\r\n");
      out.write("                        <li class=\"nav-item\">\r\n");
      out.write("                            <a class=\"nav-link\" href=\"signup.jsp\">Sign Up</a>\r\n");
      out.write("                        </li>\r\n");
      out.write("                        ");

                    }
                
      out.write("\r\n");
      out.write("            </ul>\r\n");
      out.write("        </div>\r\n");
      out.write("    </nav>\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js\" integrity=\"sha384-I7E8VVD/ismYTF4hNIPjVp/Zjvgyol6VFvRkX/vR+Vc4jQkC+hVqc2pM8ODewa9r\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.min.js\" integrity=\"sha384-BBtl+eGJRgqQAUMxJ7pMwbEyER4l1g+O15P+16Ep7Q9Q+zqX6gSbd85u4mG4QzX+\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("    <div class=\"row justify-content-center\">\r\n");
      out.write("    <div class = \"col-8 p-3 mb-2 bg-light text-dark\">\r\n");
      out.write("    ");

        sso = request.getSession(false);
        String loggedInUser = (sso != null && sso.getAttribute("username") != null) ? (String) sso.getAttribute("username") : "test"; 

        String action = request.getParameter("action");
        String friendUsername = request.getParameter("friendUsername");

        String dbURL = "jdbc:mysql://localhost:3306/sot?autoReconnect=true&useSSL=false";
        Properties props = new Properties();
        InputStream input = getServletContext().getResourceAsStream("/WEB-INF/config.properties");
        props.load(input);
        input.close();
        String user = props.getProperty("db.username");
        String password = props.getProperty("db.password");
        
        Connection con = null;
        PreparedStatement pstmt = null;
        ResultSet rs = null;
        Class.forName("com.mysql.jdbc.Driver");
        con = DriverManager.getConnection(dbURL, user, password);
        if ("deleteFriend".equals(request.getParameter("action"))) {
            try {
                String sql = "DELETE FROM friends WHERE user1 = ? AND user2 = ?";
                pstmt = con.prepareStatement(sql);
                pstmt.setString(1, loggedInUser);
                pstmt.setString(2, friendUsername);
                int rowsAffected = pstmt.executeUpdate();
                if (rowsAffected > 0) {
                    out.println("<p>Friend deleted successfully.</p>");
                } else {
                    out.println("<p>Error occurred while deleting the friend.</p>");
                }
            } catch(SQLException e) {
                out.println("<p>SQLException caught: " + e.getMessage() + "</p>");
            }
        }
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection(dbURL, user, password);
    
            if ("addFriend".equals(action) && friendUsername != null) {
                if (friendUsername.equals(loggedInUser)){
                    throw new SQLException("Cannot add yourself as a friend."); 
                } else {
                    String sql = "SELECT username FROM users WHERE username = ?";
                    pstmt = con.prepareStatement(sql);
                    pstmt.setString(1, friendUsername);
                    rs = pstmt.executeQuery();
                    if (rs.next()){
                        sql = "(SELECT user1 from friends WHERE user1 = ? AND user2 = ?) UNION (SELECT user1 from friends WHERE user1 = ? AND user2 = ?)";
                        pstmt = con.prepareStatement(sql);
                        pstmt.setString(1, loggedInUser);
                        pstmt.setString(2, friendUsername);
                        pstmt.setString(3, friendUsername);
                        pstmt.setString(4, loggedInUser);
                        rs = pstmt.executeQuery();
                        if (!rs.next()){
                        sql = "INSERT INTO friends (user1, user2) VALUES (?, ?)";
                        pstmt = con.prepareStatement(sql);
                        pstmt.setString(1, loggedInUser);
                        pstmt.setString(2, friendUsername);
                        pstmt.executeUpdate();
                        
      out.write("\r\n");
      out.write("                            <div class=\"alert alert-success\" role=\"alert\">\r\n");
      out.write("                                <p>Friend Request Sent</p>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        ");
             
                        } else {
                            throw new SQLException("Users are already friends or pending.");
                        }
                    } else {
                        throw new SQLException("User does not exist.");
                    }
 
                    
                }
            }
    
            if ("removeFriend".equals(action) && friendUsername != null) {
                String sql = "DELETE FROM friends WHERE user1 = ? AND user2 = ?";
                pstmt = con.prepareStatement(sql);
                pstmt.setString(1, loggedInUser);
                pstmt.setString(2, friendUsername);
                pstmt.executeUpdate();
            }
    
        } catch (Exception e) {
                
      out.write("\r\n");
      out.write("                <div class=\"alert alert-danger\" role=\"alert\">\r\n");
      out.write("                    ");
      out.print(e.getMessage());
      out.write("\r\n");
      out.write("                </div>\r\n");
      out.write("                ");

        } finally {
            if (pstmt != null) try { pstmt.close(); } catch (SQLException e) { }
            if (con != null) try { con.close(); } catch (SQLException e) { }
        }

    
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("    <h3>Manage Friends</h3>\r\n");
      out.write("    <form method=\"post\">\r\n");
      out.write("        <label for=\"friendUsername\"><b>Friend's Username</b></label>\r\n");
      out.write("        <input type=\"text\" placeholder=\"Enter Friend Username\" name=\"friendUsername\" required>\r\n");
      out.write("        <button type=\"submit\" name=\"action\" value=\"addFriend\">Add Friend</button>\r\n");
      out.write("    </form>\r\n");
      out.write("\r\n");
      out.write("    <div id=\"pendingFriends\">\r\n");
      out.write("        <h4>Pending Friends</h4>\r\n");
      out.write("        ");

            try {
                con = DriverManager.getConnection(dbURL, user, password);
                String sql = "(SELECT user1 FROM friends WHERE user2 = ? AND pending = 1)";
                pstmt = con.prepareStatement(sql);
                pstmt.setString(1, loggedInUser);
                rs = pstmt.executeQuery();
                out.println("<ul>");
                while (rs.next()) {
                    if (rs.getString(1) != null){
                        
      out.write("\r\n");
      out.write("                        <div class =\"card\">\r\n");
      out.write("                            <div class=\"card-body\">\r\n");
      out.write("                                <h5 class=\"card-title\">");
      out.print(rs.getString(1));
      out.write("</h5>\r\n");
      out.write("                                <a href=\"accept_friend.jsp?friendusername=");
      out.print(rs.getString(1));
      out.write("\"><button class=\"btn btn-primary\">Accept</button></a>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div> \r\n");
      out.write("                        ");

                    }
                    
                }
                out.println("</ul>");
            } catch (Exception e) {
                
      out.write("\r\n");
      out.write("                <div class=\"alert alert-danger\" role=\"alert\">\r\n");
      out.write("                    ");
      out.print(e.getMessage());
      out.write("\r\n");
      out.write("                </div>\r\n");
      out.write("                ");

            } finally {
                if (rs != null) try { rs.close(); } catch (SQLException e) { }
                if (pstmt != null) try { pstmt.close(); } catch (SQLException e) { }
                if (con != null) try { con.close(); } catch (SQLException e) { }
            }
        
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("    <div id=\"currentFriends\">\r\n");
      out.write("        <h4>Current Friends</h4>\r\n");
      out.write("        ");

            try {
                con = DriverManager.getConnection(dbURL, user, password);
                String sql = "(SELECT * from friends WHERE user1 = ? AND pending = 0 OR user2 = ? AND pending = 0)";
                pstmt = con.prepareStatement(sql);
                pstmt.setString(1, loggedInUser);
                pstmt.setString(2, loggedInUser);
                rs = pstmt.executeQuery();
                out.println("<ul>");
                while (rs.next()) {
                    if (!rs.getString(1).equals(loggedInUser)){
                        
      out.write("\r\n");
      out.write("                        <div class =\"card\">\r\n");
      out.write("                            <div class=\"card-body\">\r\n");
      out.write("                                <h5 class=\"card-title\">");
      out.print(rs.getString(1));
      out.write("</h5>\r\n");
      out.write("                                <a href=\"remove_friend.jsp?friendID=");
      out.print(rs.getString(4));
      out.write("\"><button class=\"btn btn-danger\">Remove</button></a>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div> \r\n");
      out.write("                        ");


                    } else {
                        
      out.write("\r\n");
      out.write("                        <div class =\"card\">\r\n");
      out.write("                            <div class=\"card-body\">\r\n");
      out.write("                                <h5 class=\"card-title\">");
      out.print(rs.getString(2));
      out.write("</h5>\r\n");
      out.write("                                <a href=\"remove_friend.jsp?friendID=");
      out.print(rs.getString(4));
      out.write("\"><button class=\"btn btn-danger\">Remove</button></a>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div> \r\n");
      out.write("                        ");

                    }
                }
                out.println("</ul>");
            } catch (Exception e) {
                
      out.write("\r\n");
      out.write("                <div class=\"alert alert-danger\" role=\"alert\">\r\n");
      out.write("                    ");
      out.print(e.getMessage());
      out.write("\r\n");
      out.write("                </div>\r\n");
      out.write("                ");

            } finally {
                if (rs != null) try { rs.close(); } catch (SQLException e) { }
                if (pstmt != null) try { pstmt.close(); } catch (SQLException e) { }
                if (con != null) try { con.close(); } catch (SQLException e) { }
            }
        
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    </div>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
